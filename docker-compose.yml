version: '3.7'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: on-failure
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - ./rabbitmq_volume:/var/lib/rabbitmq/mnesia

  redis:
    image: redis
    container_name: redis
    restart: on-failure
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"  
    volumes:
      - ./redis_volume:/data
  
  mssql:
    image: mcr.microsoft.com/mssql/server
    container_name: mssql
    restart: on-failure
    environment:
      - SA_PASSWORD=Brt_z!py
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"
    volumes:
      - ./mssql_volume:/var/opt/mssql

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: workshop_api
    restart: on-failure
    ports:
      - "5000:80"
    depends_on:
      - mssql
      - redis
      - rabbitmq   
    command: ["./wait-for-it.sh", "--timeout=0", "mssql:1433", "--", "dotnet", "aspnet-core-docker-workshop.dll"]

  ui:
    build: 
      context: ./react_ui
      dockerfile: Dockerfile
    container_name: workshop_ui
    restart: on-failure
    ports:
      - '5001:3000'
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api
    volumes:        
      - ./react_ui/src:/ui/src
      - '/ui/node_modules'